version: 2.1

jobs:
  build-capstone:
    docker:
      - image: python:3.9
    steps:
      - checkout
      - restore_cache:
          keys: [fastapi-build]
      - run:
          name: Setup env
          command: |                    
            make setup
      - run:
          name: Install requirements
          command: |          
            make install
      - run:
          name: Run lint
          command: |          
           make lint
      - run:
          name: Run tests
          command: |          
           make test

  build-docker-and-upload:
    docker:
      - image: circleci/golang:1.15
        auth:
            username: $DOCKER_USER
            password: $DOCKER_PWD         
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker file
          command: |            
           docker build --tag=fastapiusers .
           docker image ls

      - run:
          name: push docker file
          command: |
            ./upload_docker.sh $DOCKER_USER $DOCKER_PASS
  
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.json
          resource-name: deployment/blue

  create-service:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: service.json
          resource-name: service/bluegreenlb

  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''
        
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0

workflows:
  default:
      jobs:
       - build-capstone           
       - build-docker-and-upload:           
            requires: [build-capstone]
       - create-small-cluster:
          cluster-name: eks-capstone-userapi        
          requires: [build-docker-and-upload]
       - create-service:
          cluster-name: eks-capstone-userapi
          requires:
            - create-small-cluster
       - create-deployment:
          cluster-name: eks-capstone-userapi
          requires:
            - create-service
       - aws-eks/update-container-image:
          cluster-name: eks-capstone-userapi
          container-image-updates: 'blue=jrrobles/fastapiusers:latest'
          record: true
          requires:
            - create-deployment
          resource-name: deployment/blue
        
      
    
        

